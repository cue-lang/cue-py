{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "30b1f127_dbc6d2c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-05-16T10:03:23Z",
      "side": 1,
      "message": "Actually would rather hold this until we have a real CI that tests the python code works, like I said on Discord.",
      "revId": "248e3b77be0cf4a9415d3d852a0595e087cee0d4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19c75429_84c06d33",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003505
      },
      "writtenOn": "2024-05-22T17:29:00Z",
      "side": 1,
      "message": "Working on the CI, will add it as another CL in the stack, but note that there is nothing to test in *this* CL. These are just definitions for CFFI. pytest exercises this code in subsequent CLs, but that only happens once higher-level functionality is added.",
      "parentUuid": "30b1f127_dbc6d2c7",
      "revId": "248e3b77be0cf4a9415d3d852a0595e087cee0d4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9922c50_bd8d56dc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-05-23T08:51:41Z",
      "side": 1,
      "message": "Ack, thanks. Please make sure to insert CI as early as you can in the stack.",
      "parentUuid": "19c75429_84c06d33",
      "revId": "248e3b77be0cf4a9415d3d852a0595e087cee0d4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "260711e9_bf67922d",
        "filename": "libcue/api.py",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-05-16T08:45:40Z",
      "side": 1,
      "message": "can you document what this is for?",
      "revId": "248e3b77be0cf4a9415d3d852a0595e087cee0d4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2961ebc8_6c736f13",
        "filename": "libcue/api.py",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1003505
      },
      "writtenOn": "2024-05-22T17:29:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "260711e9_bf67922d",
      "revId": "248e3b77be0cf4a9415d3d852a0595e087cee0d4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "102a9733_828048b4",
        "filename": "libcue/api.py",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-05-16T08:45:40Z",
      "side": 1,
      "message": "did you pick very short names like \"bopt\" and \"eopt\" names on purpose? wouldn\u0027t they confuse end users?",
      "revId": "248e3b77be0cf4a9415d3d852a0595e087cee0d4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e488b4ab_76756ff3",
        "filename": "libcue/api.py",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2024-05-21T20:39:20Z",
      "side": 1,
      "message": "I guess these are C names, where this is usual. As long as that is not included in the Python interface. It would be great if there is some documentation.",
      "parentUuid": "102a9733_828048b4",
      "revId": "248e3b77be0cf4a9415d3d852a0595e087cee0d4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20cf8052_d580a850",
        "filename": "libcue/api.py",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1003505
      },
      "writtenOn": "2024-05-22T17:29:00Z",
      "side": 1,
      "message": "These names come from libcue, and they have to match libcue, Python users won\u0027t see any of this stuff. This is a low-level package that users don\u0027t have access to. We build the high-level cue package on top of this.",
      "parentUuid": "102a9733_828048b4",
      "revId": "248e3b77be0cf4a9415d3d852a0595e087cee0d4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12d2e828_d51d6922",
        "filename": "libcue/api.py",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-05-16T08:45:40Z",
      "side": 1,
      "message": "are you mixing space indentation with tabs in the middle of the line on purpose? that seems rather odd. also, some lines above like 37 use both spaces and tabs to indent.",
      "revId": "248e3b77be0cf4a9415d3d852a0595e087cee0d4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94832cf5_008198bb",
        "filename": "libcue/api.py",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1003505
      },
      "writtenOn": "2024-05-22T17:29:00Z",
      "side": 1,
      "message": "Yes, this is on purpose because this is literal libcue code, which uses tabs (because it is C code).\n\nSame happening on line 37, we need the initial spaces because this is Python, but the struct itself comes from C, which uses tabs.\n\nSince this is (almost) literal libcue code, it seems a good idea to just copy-paste it here rather than edit it which has the risk of diverging from libcue with very difficult to debug bugs.",
      "parentUuid": "12d2e828_d51d6922",
      "revId": "248e3b77be0cf4a9415d3d852a0595e087cee0d4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57f9c2c6_bbbbd166",
        "filename": "libcue/api.py",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-05-23T08:51:41Z",
      "side": 1,
      "message": "Ack, I would make that an explicit comment to document the reasoning. Many editors or code viewers will treat or show the mixed indentation as a weird quirk.",
      "parentUuid": "94832cf5_008198bb",
      "revId": "248e3b77be0cf4a9415d3d852a0595e087cee0d4",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}